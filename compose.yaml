services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    networks:
      - bridge-network

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=wahlanalyse'
      - 'POSTGRES_PASSWORD=1234'
      - 'POSTGRES_USER=user'
    ports:
      - '5432:5432'
    networks:
      - bridge-network

  springboot-app:
    build:
      context: backend-datenbanken/.
      dockerfile: Dockerfile  # Path to your Dockerfile
    ports:
      - "8080:8080"  # Map the container port to a local port
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/wahlanalyse'
      - 'SPRING_DATASOURCE_USERNAME=user'
      - 'SPRING_DATASOURCE_PASSWORD=1234'
    depends_on:
      - postgres  # Wait for postgres to be ready
      - redis
    networks:
      - bridge-network

  frontend:
    build:
      context: frontend-datenbank/.
      dockerfile: Dockerfile  # Path to your Dockerfile
    ports:
      - "3000:3000"  # Map the container port to a local port
    networks:
      - bridge-network
    depends_on:
      - springboot-app

volumes:
  redis_data:
    driver: local

networks:
  bridge-network:
    driver: bridge
